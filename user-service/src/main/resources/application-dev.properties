spring.application.name=user-service
server.port=8081
# MySQL DB Config
spring.datasource.url=jdbc:postgresql://localhost:5432/user
spring.datasource.username=admin
spring.datasource.password=admin
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=schema.sql
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
spring.jpa.show-sql=true

#Connection Config and matching-strategy
spring.mvc.pathmatch.matching-strategy=ant_path_matcher
spring.datasource.hikari.connectionTimeout=30000
spring.datasource.hikari.maximumPoolSize=50

# Keycloak
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/Greb
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
keycloak.auth-server-url=http://localhost:8080
keycloak.realm=Greb
keycloak.resource=user-management
keycloak.credentials.secret=tnwcYIbEKBlub9VvqFiec4LWPdfiLgT5

# Mail
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=tienhung17092004@gmail.com
spring.mail.password=m h o m p y h b j t m a h d b k
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# swagger-ui custom path
springdoc.swagger-ui.path=/swagger-ui
springdoc.packagesToScan=com.greb.user-service
springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=true
springdoc.swagger-ui.oauth.client-id=swagger-ui
springdoc.oauthflow.authorization-url=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/auth
springdoc.oauthflow.token-url=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/token